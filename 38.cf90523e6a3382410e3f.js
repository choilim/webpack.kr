"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[38],{38:function(e,a,n){n.r(a),n(7378);var t=n(2682);function o(){return(o=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var n=arguments[a];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e}).apply(this,arguments)}function s({components:e,...a}){return(0,t.kt)("wrapper",o({components:e},a),(0,t.kt)("p",null,"IgnorePlugin prevents the generation of modules for ",(0,t.kt)("inlineCode",{parentName:"p"},"import")," or ",(0,t.kt)("inlineCode",{parentName:"p"},"require")," calls matching the regular expressions or filter functions:"),(0,t.kt)("h2",{id:"using-regular-expressions"},"Using regular expressions",(0,t.kt)("a",{href:"#using-regular-expressions","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"resourceRegExp"),": A RegExp to test the resource against."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"contextRegExp"),": (optional) A RegExp to test the context (directory) against.")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-javascript",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"new")," ",(0,t.kt)("span",{className:"token class-name",parentName:"code"},"webpack",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},"."),"IgnorePlugin"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{")," resourceRegExp",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," contextRegExp ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// Supported in webpack 4 and earlier, unsupported in webpack 5:"),"\n",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"new")," ",(0,t.kt)("span",{className:"token class-name",parentName:"code"},"webpack",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},"."),"IgnorePlugin"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),"resourceRegExp",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"["),"contextRegExp",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("h2",{id:"using-filter-functions"},"Using filter functions",(0,t.kt)("a",{href:"#using-filter-functions","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"checkResource (resource, context)")," A Filter function that receives ",(0,t.kt)("inlineCode",{parentName:"li"},"resource")," and ",(0,t.kt)("inlineCode",{parentName:"li"},"context")," as arguments, must return boolean."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"checkContext (context)")," was ",(0,t.kt)("strong",{parentName:"li"},"removed in webpack 5")," as ",(0,t.kt)("inlineCode",{parentName:"li"},"checkResource")," already gets context.")),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-javascript",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"new")," ",(0,t.kt)("span",{className:"token class-name",parentName:"code"},"webpack",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},"."),"IgnorePlugin"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,t.kt)("span",{className:"token function",parentName:"code"},"checkResource"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token parameter",parentName:"code"},"resource"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    ",(0,t.kt)("span",{className:"token comment",parentName:"code"},"// do something with resource"),"\n    ",(0,t.kt)("span",{className:"token keyword",parentName:"code"},"return")," ",(0,t.kt)("span",{className:"token boolean",parentName:"code"},"true")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"|")," ",(0,t.kt)("span",{className:"token boolean",parentName:"code"},"false"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n  ",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("h2",{id:"example-of-ignoring-moment-locales"},"Example of ignoring Moment Locales",(0,t.kt)("a",{href:"#example-of-ignoring-moment-locales","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.kt)("span",{className:"header-link",parentName:"a"}))),(0,t.kt)("p",null,"As of ",(0,t.kt)("a",{href:"https://momentjs.com/",parentName:"p"},"moment")," 2.18, all locales are bundled together with the core library (see ",(0,t.kt)("a",{href:"https://github.com/moment/moment/issues/2373",parentName:"p"},"this GitHub issue"),")."),(0,t.kt)("p",null,"The ",(0,t.kt)("inlineCode",{parentName:"p"},"resourceRegExp")," parameter passed to ",(0,t.kt)("inlineCode",{parentName:"p"},"IgnorePlugin")," is not tested against the resolved file names or absolute module names being imported or required, but rather against the ",(0,t.kt)("em",{parentName:"p"},"string")," passed to ",(0,t.kt)("inlineCode",{parentName:"p"},"require")," or ",(0,t.kt)("inlineCode",{parentName:"p"},"import")," ",(0,t.kt)("em",{parentName:"p"},"within the source code where the import is taking place"),". For example, if you're trying to exclude ",(0,t.kt)("inlineCode",{parentName:"p"},"node_modules/moment/locale/*.js"),", this won't work:"),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-diff",parentName:"pre"},(0,t.kt)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,t.kt)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,t.kt)("span",{className:"token line",parentName:"span"},"new webpack.IgnorePlugin({ resourceRegExp: /moment\\/locale\\// });")))),(0,t.kt)("p",null,"Rather, because ",(0,t.kt)("inlineCode",{parentName:"p"},"moment")," imports with this code:"),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-js",parentName:"pre"},(0,t.kt)("span",{className:"token function",parentName:"code"},"require"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token string",parentName:"code"},"'./locale/'")," ",(0,t.kt)("span",{className:"token operator",parentName:"code"},"+")," name",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("p",null,"...your first regexp must match that ",(0,t.kt)("inlineCode",{parentName:"p"},"'./locale/'")," string. The second ",(0,t.kt)("inlineCode",{parentName:"p"},"contextRegExp")," parameter is then used to select specific directories from where the import took place. The following will cause those locale files to be ignored:"),(0,t.kt)("pre",null,(0,t.kt)("code",{className:"hljs language-javascript",parentName:"pre"},(0,t.kt)("span",{className:"token keyword",parentName:"code"},"new")," ",(0,t.kt)("span",{className:"token class-name",parentName:"code"},"webpack",(0,t.kt)("span",{className:"token punctuation",parentName:"span"},"."),"IgnorePlugin"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  resourceRegExp",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token regex",parentName:"code"},"/^\\.\\/locale$/"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  contextRegExp",(0,t.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,t.kt)("span",{className:"token regex",parentName:"code"},"/moment$/"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,t.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,t.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,t.kt)("p",null,'...which means "any require statement matching ',(0,t.kt)("inlineCode",{parentName:"p"},"'./locale'")," from any directories ending with ",(0,t.kt)("inlineCode",{parentName:"p"},"'moment'")," will be ignored."))}s.isMDXComponent=!0,a.default=s}}]);